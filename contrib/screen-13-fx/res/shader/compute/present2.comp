#version 460 core

#include "../inc/catmull_rom.glsl"
#include "../inc/content.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D src_images_sampler_llr[2];

layout(set = 0, binding = 1, rgba8) restrict writeonly uniform image2D dst_image;

vec4 sample_src_image(uint idx)
{
    // Figure out the input/output image sizes
    uvec2 src_size = textureSize(src_images_sampler_llr[idx], 0);
    uvec2 dst_size = imageSize(dst_image);

    // Map dst-coord to src-uv (dst coord is the invocation id...)
    vec2 src_uv = content_fill(src_size, dst_size, gl_GlobalInvocationID.xy);

    // Sample with a fancy filter and store
    return sample_catmull_rom(src_images_sampler_llr[idx], src_uv);
}

void main()
{
    vec4 blend = sample_src_image(0);
    vec4 base = sample_src_image(1);
    float inv_a = 1.0 - blend.a;

    vec3 color = blend.rgb + base.rgb * inv_a;

    imageStore(
        dst_image,
        ivec2(gl_GlobalInvocationID.xy),
        vec4(color, 1.0)
    );
}